our_data
library(lubridate)
library(tidyverse)
library(magrittr)
library(dplyr)
library(data.table)
first_date <- as.Date("2022-01-01")
last_date <- as.Date("2022-04-30")
#Get case data - this takes ages
all_data <- fread("https://cog-uk.s3.climb.ac.uk/phylogenetics/latest/cog_metadata.csv.gz")
our_data <- select(filter(all_data, sample_date >= first_date), lineage, sample_date)
#Due to a notational quirk, we can collect lineages by just taking the first four characters of the lineage name.
our_data <- mutate(our_data, lineage = substr(lineage, 1, 4))
our_data
unique(our_data$lineage)
"
grp = group_by(our_data, sample_date, lineage) %>% summarise(number = n())
a = select(filter(grp, lineage == "BA.1"), sample_date, number)
grp = group_by(our_data, sample_date, lineage) %>% summarise(number = n())
a = select(filter(grp, lineage == "BA.1"), sample_date, number)
b = select(filter(grp, lineage == "BA.2"), sample_date, number)
#Collect counts of each lineage in weighting by total of BA sequences
df <- purrr::reduce(list(a,b), dplyr::left_join, by = 'sample_date')
colnames(df) = c("sample_date", "ba1", "ba2")
df <- mutate(df, ba2_frac = ba2 / ba1)
df <- mutate(df, ba1_frac = ba2 / ba1)
ba1_frac
df
first_date <- as.Date("2022-12-01")
last_date <- as.Date("2022-04-30")
our_data <- select(filter(all_data, sample_date >= first_date), lineage, sample_date)
#Due to a notational quirk, we can collect lineages by just taking the first four characters of the lineage name.
our_data <- mutate(our_data, lineage = substr(lineage, 1, 4))
grp = group_by(our_data, sample_date, lineage) %>% summarise(number = n())
a = select(filter(grp, lineage == "BA.1"), sample_date, number)
b = select(filter(grp, lineage == "BA.2"), sample_date, number)
#Collect counts of each lineage in weighting by total of BA sequences
df <- purrr::reduce(list(a,b), dplyr::left_join, by = 'sample_date')
colnames(df) = c("sample_date", "ba1", "ba2")
df <- mutate(df, ba1_frac = ba2 / ba1)
wts = coalesce(df$ba1,0) + coalesce(df$ba2,0)
#Regression with log2 transformation
regba4 <- lm(log2(ba4_frac) ~ date(sample_date), data = df, weights = wts)
#Regression with log2 transformation
regba2 <- lm(log2(ba2_frac) ~ date(sample_date), data = df, weights = wts)
df <- mutate(df, ba2_frac = ba2 / ba1)
wts = coalesce(df$ba1,0) + coalesce(df$ba2,0)
#Regression with log2 transformation
regba2 <- lm(log2(ba2_frac) ~ date(sample_date), data = df, weights = wts)
regba2
df
View(df)
#Collect counts of each lineage in weighting by total of BA sequences
df <- purrr::reduce(list(a,b), dplyr::left_join, by = 'sample_date')
colnames(df) = c("sample_date", "ba1", "ba2")
df
a = select(filter(grp, lineage == "BA.1"), sample_date, number)
b = select(filter(grp, lineage == "BA.2"), sample_date, number)
a
grp
#Due to a notational quirk, we can collect lineages by just taking the first four characters of the lineage name.
our_data <- mutate(our_data, lineage = substr(lineage, 1, 4))
our_data
first_date <- as.Date("2021-12-01")
last_date <- as.Date("2022-04-30")
our_data <- select(filter(all_data, sample_date >= first_date), lineage, sample_date)
#Due to a notational quirk, we can collect lineages by just taking the first four characters of the lineage name.
our_data <- mutate(our_data, lineage = substr(lineage, 1, 4))
grp = group_by(our_data, sample_date, lineage) %>% summarise(number = n())
a = select(filter(grp, lineage == "BA.1"), sample_date, number)
b = select(filter(grp, lineage == "BA.2"), sample_date, number)
#Collect counts of each lineage in weighting by total of BA sequences
df <- purrr::reduce(list(a,b), dplyr::left_join, by = 'sample_date')
colnames(df) = c("sample_date", "ba1", "ba2")
df <- mutate(df, ba2_frac = ba2 / ba1)
wts = coalesce(df$ba1,0) + coalesce(df$ba2,0)
#Regression with log2 transformation
regba2 <- lm(log2(ba2_frac) ~ date(sample_date), data = df, weights = wts)
plot(date(df$sample_date), log2(df$ba2_frac), col = 2, ylim = c(-13, 0), xlim = c(first_date, last_date), yaxt = "n", xaxt = "n", ylab = "Ratio of BA.2 to BA.1, % - log2 scale", xlab = "Date", main = "BA.2 as a ratio to BA.1 in COG-UK sequences")
plot(date(df$sample_date), log2(df$ba2_frac), col = 2, ylim = c(-13, 3), xlim = c(first_date, last_date), yaxt = "n", xaxt = "n", ylab = "Ratio of BA.2 to BA.1, % - log2 scale", xlab = "Date", main = "BA.2 as a ratio to BA.1 in COG-UK sequences")
plot(date(df$sample_date), log2(df$ba2_frac), col = 2, ylim = c(-13, 5), xlim = c(first_date, last_date), yaxt = "n", xaxt = "n", ylab = "Ratio of BA.2 to BA.1, % - log2 scale", xlab = "Date", main = "BA.2 as a ratio to BA.1 in COG-UK sequences")
plot(date(df$sample_date), log2(df$ba2_frac), col = 2, ylim = c(-13, 3), xlim = c(first_date, last_date), yaxt = "n", xaxt = "n", ylab = "Ratio of BA.2 to BA.1, % - log2 scale", xlab = "Date", main = "BA.2 as a ratio to BA.1 in COG-UK sequences")
plot(date(df$sample_date), log2(df$ba2_frac), col = 2, ylim = c(-13, 4), xlim = c(first_date, last_date), yaxt = "n", xaxt = "n", ylab = "Ratio of BA.2 to BA.1, % - log2 scale", xlab = "Date", main = "BA.2 as a ratio to BA.1 in COG-UK sequences")
axis(side = 2, at = yticks, labels = c("0.024%","0.049%", "0.098%", "0.195%", "0.391%", "0.781%", "1.563%", "3.125%", "6.25%", "12.5%", "25%", "50%", "100%", "2x", "4x", "8x", "16x"))
axis(side = 2, at = yticks, labels = c("0.024%","0.049%", "0.098%", "0.195%", "0.391%", "0.781%", "1.563%", "3.125%", "6.25%", "12.5%", "25%", "50%", "100%", "2x", "4x", "8x", "16x"))
axis(side = 2, at = yticks, labels = c("0.024%","0.049%", "0.098%", "0.195%", "0.391%", "0.781%", "1.563%", "3.125%", "6.25%", "12.5%", "25%", "50%", "100%", "2x", "4x", "8x", "16x"))
yticks = seq(-13, 4)
axis(side = 2, at = yticks, labels = c("0.024%","0.049%", "0.098%", "0.195%", "0.391%", "0.781%", "1.563%", "3.125%", "6.25%", "12.5%", "25%", "50%", "100%", "2x", "4x", "8x", "16x"))
xticks = seq(first_date, last_date, 7)
axis(1, at = xticks, labels = format(date(xticks), format = "%d %b"))
yticks = seq(-13, 3)
axis(side = 2, at = yticks, labels = c("0.024%","0.049%", "0.098%", "0.195%", "0.391%", "0.781%", "1.563%", "3.125%", "6.25%", "12.5%", "25%", "50%", "100%", "2x", "4x", "8x", "16x"))
xticks = seq(first_date, last_date, 7)
axis(1, at = xticks, labels = format(date(xticks), format = "%d %b"))
abline(regba2, col = 2)
abline(h = 0, col = "gray", lty= "dotted")
abline(h = -1, col = "gray", lty= "dashed")
title(sub="Plot of COG-UK data, by @paulmainwood, inspired by previous work from @alexselby1770", adj=1, line=4, font=1, cex.sub = 0.6)
last_date <- as.Date("2022-04-1")
our_data <- select(filter(all_data, sample_date >= first_date), lineage, sample_date)
#Due to a notational quirk, we can collect lineages by just taking the first four characters of the lineage name.
our_data <- mutate(our_data, lineage = substr(lineage, 1, 4))
grp = group_by(our_data, sample_date, lineage) %>% summarise(number = n())
a = select(filter(grp, lineage == "BA.1"), sample_date, number)
b = select(filter(grp, lineage == "BA.2"), sample_date, number)
#Collect counts of each lineage in weighting by total of BA sequences
df <- purrr::reduce(list(a,b), dplyr::left_join, by = 'sample_date')
colnames(df) = c("sample_date", "ba1", "ba2")
df <- mutate(df, ba2_frac = ba2 / ba1)
wts = coalesce(df$ba1,0) + coalesce(df$ba2,0)
#Regression with log2 transformation
regba2 <- lm(log2(ba2_frac) ~ date(sample_date), data = df, weights = wts)
plot(date(df$sample_date), log2(df$ba2_frac), col = 2, ylim = c(-13, 4), xlim = c(first_date, last_date), yaxt = "n", xaxt = "n", ylab = "Ratio of BA.2 to BA.1, % - log2 scale", xlab = "Date", main = "BA.2 as a ratio to BA.1 in COG-UK sequences")
points(date(df$sample_date), log2(df$ba5_frac), col = 3)
yticks = seq(-13, 3)
axis(side = 2, at = yticks, labels = c("0.024%","0.049%", "0.098%", "0.195%", "0.391%", "0.781%", "1.563%", "3.125%", "6.25%", "12.5%", "25%", "50%", "100%", "2x", "4x", "8x", "16x"))
xticks = seq(first_date, last_date, 7)
axis(1, at = xticks, labels = format(date(xticks), format = "%d %b"))
log2(ba2_frac)
ba2_frac
df$ba2_frac
df
filter(df, sample_date < as.Date("2022-01-10"))
df_to_10Jan = filter(df, sample_date < as.Date("2022-01-10"))
df$wts = coalesce(df$ba1,0) + coalesce(df$ba2,0)
regba2 <- lm(log2(ba2_frac) ~ date(sample_date), data = df_to_10Jan, weights = df_to_10Jan$wts)
df$wts = coalesce(df$ba1,0) + coalesce(df$ba2,0)
df_to_10Jan = filter(df, sample_date < as.Date("2022-01-10"))
regba2 <- lm(log2(ba2_frac) ~ date(sample_date), data = df_to_10Jan, weights = df_to_10Jan$wts)
plot(date(df$sample_date), log2(df$ba2_frac), col = 2, ylim = c(-13, 4), xlim = c(first_date, last_date), yaxt = "n", xaxt = "n", ylab = "Ratio of BA.2 to BA.1, % - log2 scale", xlab = "Date", main = "BA.2 as a ratio to BA.1 in COG-UK sequences")
yticks = seq(-13, 3)
axis(side = 2, at = yticks, labels = c("0.024%","0.049%", "0.098%", "0.195%", "0.391%", "0.781%", "1.563%", "3.125%", "6.25%", "12.5%", "25%", "50%", "100%", "2x", "4x", "8x", "16x"))
xticks = seq(first_date, last_date, 7)
axis(1, at = xticks, labels = format(date(xticks), format = "%d %b"))
abline(regba2, col = 2)
first_date <- as.Date("2021-12-15")
last_date <- as.Date("2022-04-1")
our_data <- select(filter(all_data, sample_date >= first_date), lineage, sample_date)
#Due to a notational quirk, we can collect lineages by just taking the first four characters of the lineage name.
our_data <- mutate(our_data, lineage = substr(lineage, 1, 4))
grp = group_by(our_data, sample_date, lineage) %>% summarise(number = n())
a = select(filter(grp, lineage == "BA.1"), sample_date, number)
b = select(filter(grp, lineage == "BA.2"), sample_date, number)
#Collect counts of each lineage in weighting by total of BA sequences
df <- purrr::reduce(list(a,b), dplyr::left_join, by = 'sample_date')
colnames(df) = c("sample_date", "ba1", "ba2")
df <- mutate(df, ba2_frac = ba2 / ba1)
df$wts = coalesce(df$ba1,0) + coalesce(df$ba2,0)
df_to_10Jan = filter(df, sample_date < as.Date("2022-01-10"))
regba2 <- lm(log2(ba2_frac) ~ date(sample_date), data = df_to_10Jan, weights = df_to_10Jan$wts)
plot(date(df$sample_date), log2(df$ba2_frac), col = 2, ylim = c(-13, 4), xlim = c(first_date, last_date), yaxt = "n", xaxt = "n", ylab = "Ratio of BA.2 to BA.1, % - log2 scale", xlab = "Date", main = "BA.2 as a ratio to BA.1 in COG-UK sequences")
yticks = seq(-13, 3)
axis(side = 2, at = yticks, labels = c("0.024%","0.049%", "0.098%", "0.195%", "0.391%", "0.781%", "1.563%", "3.125%", "6.25%", "12.5%", "25%", "50%", "100%", "2x", "4x", "8x", "16x"))
xticks = seq(first_date, last_date, 7)
axis(1, at = xticks, labels = format(date(xticks), format = "%d %b"))
abline(regba2, col = 2)
abline(h = 0, col = "gray", lty= "dotted")
abline(h = -1, col = "gray", lty= "dashed")
2^-13
axis(side = 2, at = yticks, labels = c("0.012%", "0.024%","0.049%", "0.098%", "0.195%", "0.391%", "0.781%", "1.563%", "3.125%", "6.25%", "12.5%", "25%", "50%", "100%", "2x", "4x", "8x", "16x"))
axis(side = 2, at = yticks, labels = c("0.012%", "0.024%","0.049%", "0.098%", "0.195%", "0.391%", "0.781%", "1.563%", "3.125%", "6.25%", "12.5%", "25%", "50%", "100%", "2x", "4x", "8x"))
plot(date(df$sample_date), log2(df$ba2_frac), col = 2, ylim = c(-13, 4), xlim = c(first_date, last_date), yaxt = "n", xaxt = "n", ylab = "Ratio of BA.2 to BA.1, % - log2 scale", xlab = "Date", main = "BA.2 as a ratio to BA.1 in COG-UK sequences")
yticks = seq(-13, 3)
axis(side = 2, at = yticks, labels = c("0.012%", "0.024%","0.049%", "0.098%", "0.195%", "0.391%", "0.781%", "1.563%", "3.125%", "6.25%", "12.5%", "25%", "50%", "100%", "2x", "4x", "8x"))
xticks = seq(first_date, last_date, 7)
axis(1, at = xticks, labels = format(date(xticks), format = "%d %b"))
abline(regba2, col = 2)
abline(h = 0, col = "gray", lty= "dotted")
abline(h = -1, col = "gray", lty= "dashed")
df
our_data
unique(our_data$lineage)
unique(all_data$lineage)
df$wts
df
library(lubridate)
library(tidyverse)
library(magrittr)
library(dplyr)
library(data.table)
first_date <- as.Date("2022-04-10")
last_date <- as.Date("2022-06-05")
#Get case data - this takes ages
all_data <- fread("https://cog-uk.s3.climb.ac.uk/phylogenetics/latest/cog_metadata.csv.gz")
our_data <- select(filter(all_data, sample_date >= first_date), lineage, sample_date)
#Due to a notational quirk, we can collect lineages by just taking the first four characters of the lineage name.
our_data <- mutate(our_data, lineage = substr(lineage, 1, 4))
grp = group_by(our_data, sample_date, lineage) %>% summarise(number = n())
a = select(filter(grp, lineage == "BA.2"), sample_date, number)
b = select(filter(grp, lineage == "BA.4"), sample_date, number)
c = select(filter(grp, lineage == "BA.5"), sample_date, number)
#Collect counts of each lineage in weighting by total of BA sequences
df <- purrr::reduce(list(a,b,c), dplyr::left_join, by = 'sample_date')
colnames(df) = c("sample_date", "ba2", "ba4", "ba5")
df <- mutate(df, ba4_frac = ba4 / ba2)
df <- mutate(df, ba5_frac = ba5 / ba2)
wts = coalesce(df$ba2,0) + coalesce(df$ba4,0) + coalesce(df$ba5,0)
#Regression with log2 transformation
regba4 <- lm(log2(ba4_frac) ~ date(sample_date), data = df, weights = wts)
regba5 <- lm(log2(ba5_frac) ~ date(sample_date), data = df, weights = wts)
plot(date(df$sample_date), log2(df$ba4_frac), col = 2, ylim = c(-13, 0), xlim = c(first_date, last_date), yaxt = "n", xaxt = "n", ylab = "Ratio of BA.4 to BA.2, % - log2 scale", xlab = "Date", main = "BA.4 & BA.5 as a ratio to BA.2 in COG-UK sequences")
points(date(df$sample_date), log2(df$ba5_frac), col = 3)
yticks = seq(-12, 0)
axis(side = 2, at = yticks, labels = c("0.024%","0.049%", "0.098%", "0.195%", "0.391%", "0.781%", "1.563%", "3.125%", "6.25%", "12.5%", "25%", "50%", "100%"))
xticks = seq(first_date, last_date, 7)
axis(1, at = xticks, labels = format(date(xticks), format = "%d %b"))
abline(regba4, col = 2)
abline(regba5, col = 3)
abline(h = 0, col = "gray", lty= "dotted")
abline(h = -1, col = "gray", lty= "dashed")
title(sub="Plot of COG-UK data, by @paulmainwood, inspired by previous work from @alexselby1770", adj=1, line=4, font=1, cex.sub = 0.6)
#Cases prediction - using ONS prevalence
a = data.frame(sample_date = seq(first_date, last_date+10, 1))
a$predictionba4 = 2^(predict(regba4,a))
a$predictionba5 = 2^(predict(regba5,a))
may7 = 78000 #estimate from ONS incidence at similar point to current prevalence
ba2growth <- may7 * (1 + -0.022)^(seq(0:39))
b <- filter(a, sample_date >= as.Date("2022-05-07"))
b$ba2abs = ba2growth
b$ba4abs = b$predictionba4 * b$ba2
b$ba5abs = b$predictionba5 * b$ba2
b$total = b$ba2abs + b$ba4abs + b$ba5abs
plot(b$sample_date, b$total)
library(lubridate)
library(tidyverse)
library(magrittr)
library(dplyr)
library(data.table)
first_date <- as.Date("2022-04-10")
last_date <- as.Date("2022-06-05")
#Get case data - this takes ages
all_data <- fread("https://cog-uk.s3.climb.ac.uk/phylogenetics/latest/cog_metadata.csv.gz")
our_data <- select(filter(all_data, sample_date >= first_date), lineage, sample_date)
#Due to a notational quirk, we can collect lineages by just taking the first four characters of the lineage name.
our_data <- mutate(our_data, lineage = substr(lineage, 1, 4))
grp = group_by(our_data, sample_date, lineage) %>% summarise(number = n())
a = select(filter(grp, lineage == "BA.2"), sample_date, number)
b = select(filter(grp, lineage == "BA.4"), sample_date, number)
c = select(filter(grp, lineage == "BA.5"), sample_date, number)
#Collect counts of each lineage in weighting by total of BA sequences
df <- purrr::reduce(list(a,b,c), dplyr::left_join, by = 'sample_date')
colnames(df) = c("sample_date", "ba2", "ba4", "ba5")
df <- mutate(df, ba4_frac = ba4 / ba2)
df <- mutate(df, ba5_frac = ba5 / ba2)
wts = coalesce(df$ba2,0) + coalesce(df$ba4,0) + coalesce(df$ba5,0)
#Regression with log2 transformation
regba4 <- lm(log2(ba4_frac) ~ date(sample_date), data = df, weights = wts)
regba5 <- lm(log2(ba5_frac) ~ date(sample_date), data = df, weights = wts)
plot(date(df$sample_date), log2(df$ba4_frac), col = 2, ylim = c(-13, 0), xlim = c(first_date, last_date), yaxt = "n", xaxt = "n", ylab = "Ratio of BA.4 to BA.2, % - log2 scale", xlab = "Date", main = "BA.4 & BA.5 as a ratio to BA.2 in COG-UK sequences")
points(date(df$sample_date), log2(df$ba5_frac), col = 3)
yticks = seq(-12, 0)
axis(side = 2, at = yticks, labels = c("0.024%","0.049%", "0.098%", "0.195%", "0.391%", "0.781%", "1.563%", "3.125%", "6.25%", "12.5%", "25%", "50%", "100%"))
xticks = seq(first_date, last_date, 7)
axis(1, at = xticks, labels = format(date(xticks), format = "%d %b"))
abline(regba4, col = 2)
abline(regba5, col = 3)
abline(h = 0, col = "gray", lty= "dotted")
abline(h = -1, col = "gray", lty= "dashed")
title(sub="Plot of COG-UK data, by @paulmainwood, inspired by previous work from @alexselby1770", adj=1, line=4, font=1, cex.sub = 0.6)
#Cases prediction - using ONS prevalence
a = data.frame(sample_date = seq(first_date, last_date+10, 1))
a$predictionba4 = 2^(predict(regba4,a))
a$predictionba5 = 2^(predict(regba5,a))
may7 = 78000 #estimate from ONS incidence at similar point to current prevalence
ba2growth <- may7 * (1 + -0.022)^(seq(0:39))
b <- filter(a, sample_date >= as.Date("2022-05-07"))
b$ba2abs = ba2growth
b$ba4abs = b$predictionba4 * b$ba2
b$ba5abs = b$predictionba5 * b$ba2
b$total = b$ba2abs + b$ba4abs + b$ba5abs
plot(b$sample_date, b$total)
library(lubridate)
library(tidyverse)
library(magrittr)
library(dplyr)
library(data.table)
first_date <- as.Date("2022-04-10")
last_date <- as.Date("2022-06-05")
#Get case data - this takes ages
all_data <- fread("https://cog-uk.s3.climb.ac.uk/phylogenetics/latest/cog_metadata.csv.gz")
our_data <- select(filter(all_data, sample_date >= first_date), lineage, sample_date)
#Due to a notational quirk, we can collect lineages by just taking the first four characters of the lineage name.
our_data <- mutate(our_data, lineage = substr(lineage, 1, 4))
grp = group_by(our_data, sample_date, lineage) %>% summarise(number = n())
a = select(filter(grp, lineage == "BA.2"), sample_date, number)
b = select(filter(grp, lineage == "BA.4"), sample_date, number)
c = select(filter(grp, lineage == "BA.5"), sample_date, number)
#Collect counts of each lineage in weighting by total of BA sequences
df <- purrr::reduce(list(a,b,c), dplyr::left_join, by = 'sample_date')
colnames(df) = c("sample_date", "ba2", "ba4", "ba5")
df <- mutate(df, ba4_frac = ba4 / ba2)
df <- mutate(df, ba5_frac = ba5 / ba2)
wts = coalesce(df$ba2,0) + coalesce(df$ba4,0) + coalesce(df$ba5,0)
#Regression with log2 transformation
regba4 <- lm(log2(ba4_frac) ~ date(sample_date), data = df, weights = wts)
regba5 <- lm(log2(ba5_frac) ~ date(sample_date), data = df, weights = wts)
plot(date(df$sample_date), log2(df$ba4_frac), col = 2, ylim = c(-13, 0), xlim = c(first_date, last_date), yaxt = "n", xaxt = "n", ylab = "Ratio of BA.4 to BA.2, % - log2 scale", xlab = "Date", main = "BA.4 & BA.5 as a ratio to BA.2 in COG-UK sequences")
points(date(df$sample_date), log2(df$ba5_frac), col = 3)
yticks = seq(-12, 0)
axis(side = 2, at = yticks, labels = c("0.024%","0.049%", "0.098%", "0.195%", "0.391%", "0.781%", "1.563%", "3.125%", "6.25%", "12.5%", "25%", "50%", "100%"))
xticks = seq(first_date, last_date, 7)
axis(1, at = xticks, labels = format(date(xticks), format = "%d %b"))
abline(regba4, col = 2)
abline(regba5, col = 3)
abline(h = 0, col = "gray", lty= "dotted")
abline(h = -1, col = "gray", lty= "dashed")
title(sub="Plot of COG-UK data, by @paulmainwood, inspired by previous work from @alexselby1770", adj=1, line=4, font=1, cex.sub = 0.6)
#Cases prediction - using ONS prevalence
a = data.frame(sample_date = seq(first_date, last_date+10, 1))
a$predictionba4 = 2^(predict(regba4,a))
a$predictionba5 = 2^(predict(regba5,a))
may7 = 78000 #estimate from ONS incidence at similar point to current prevalence
ba2growth <- may7 * (1 + -0.022)^(seq(0:39))
b <- filter(a, sample_date >= as.Date("2022-05-07"))
b$ba2abs = ba2growth
b$ba4abs = b$predictionba4 * b$ba2
b$ba5abs = b$predictionba5 * b$ba2
b$total = b$ba2abs + b$ba4abs + b$ba5abs
plot(b$sample_date, b$total)
our_data <- select(filter(all_data, sample_date >= first_date), lineage, sample_date)
our_data
unique(our_data$lineage)
grp = group_by(our_data, lineage) %>% summarise(number = n())
grp
sort(grp)
sort(grp, number)
arrange(grp, number)
arrange(grp, number, descending = TRUE)
arrange(grp, number, descending = FALSE)
arrange(grp, number, desc)
arrange(grp, desc(number))
arrange(grp, desc(number))
display(arrange(grp, desc(number)))
print(arrange(grp, desc(number)), n = 55)
first_date <- as.Date("2022-05-1")
last_date <- as.Date("2022-06-05")
our_data <- select(filter(all_data, sample_date >= first_date), lineage, sample_date)
grp = group_by(our_data, lineage) %>% summarise(number = n())
grp
print(arrange(grp, desc(number)), n = 55)
first_date <- as.Date("2022-04-10")
last_date <- as.Date("2022-06-05")
our_data <- select(filter(all_data, sample_date >= first_date), lineage, sample_date)
grp = group_by(our_data, sample_date, lineage) %>% summarise(number = n())
a = select(filter(grp, lineage == "BA.2"), sample_date, number)
b = select(filter(grp, lineage == "BA.4"), sample_date, number)
c = select(filter(grp, lineage == "BA.5"), sample_date, number)
d = select(filter(grp, lineage == "BA.2.12.1"), sample_date, number)
#Collect counts of each lineage in weighting by total of BA sequences
df <- purrr::reduce(list(a,b,c, d), dplyr::left_join, by = 'sample_date')
colnames(df) = c("sample_date", "ba2", "ba4", "ba5", "ba2121")
df <- mutate(df, ba4_frac = ba4 / ba2)
df <- mutate(df, ba5_frac = ba5 / ba2)
df <- mutate(df, ba2121_frac = ba2121 / ba2)
wts = coalesce(df$ba2,0) + coalesce(df$ba4,0) + coalesce(df$ba5,0)+ coalesce(df$ba2121,0)
#Regression with log2 transformation
regba4 <- lm(log2(ba4_frac) ~ date(sample_date), data = df, weights = wts)
regba5 <- lm(log2(ba5_frac) ~ date(sample_date), data = df, weights = wts)
regba2121 <- lm(log2(ba2121_frac) ~ date(sample_date), data = df, weights = wts)
plot(date(df$sample_date), log2(df$ba4_frac), col = 2, ylim = c(-13, 0), xlim = c(first_date, last_date), yaxt = "n", xaxt = "n", ylab = "Ratio of BA.4 to BA.2, % - log2 scale", xlab = "Date", main = "BA.4 & BA.5 as a ratio to BA.2 in COG-UK sequences")
points(date(df$sample_date), log2(df$ba5_frac), col = 3)
points(date(df$sample_date), log2(df$ba2121_frac), col = 4)
yticks = seq(-12, 0)
axis(side = 2, at = yticks, labels = c("0.024%","0.049%", "0.098%", "0.195%", "0.391%", "0.781%", "1.563%", "3.125%", "6.25%", "12.5%", "25%", "50%", "100%"))
xticks = seq(first_date, last_date, 7)
axis(1, at = xticks, labels = format(date(xticks), format = "%d %b"))
abline(regba4, col = 2)
abline(regba5, col = 3)
abline(regba5, col = 4)
plot(date(df$sample_date), log2(df$ba4_frac), col = 2, ylim = c(-13, 0), xlim = c(first_date, last_date), yaxt = "n", xaxt = "n", ylab = "Ratio of BA.4 to BA.2, % - log2 scale", xlab = "Date", main = "BA.4 & BA.5 as a ratio to BA.2 in COG-UK sequences")
points(date(df$sample_date), log2(df$ba5_frac), col = 3)
points(date(df$sample_date), log2(df$ba2121_frac), col = 4)
yticks = seq(-12, 0)
axis(side = 2, at = yticks, labels = c("0.024%","0.049%", "0.098%", "0.195%", "0.391%", "0.781%", "1.563%", "3.125%", "6.25%", "12.5%", "25%", "50%", "100%"))
xticks = seq(first_date, last_date, 7)
axis(1, at = xticks, labels = format(date(xticks), format = "%d %b"))
abline(regba4, col = 2)
abline(regba5, col = 3)
abline(regba2121, col = 4)
abline(h = 0, col = "gray", lty= "dotted")
abline(h = -1, col = "gray", lty= "dashed")
title(sub="Plot of COG-UK data, by @paulmainwood, inspired by previous work from @alexselby1770", adj=1, line=4, font=1, cex.sub = 0.6)
#Cases prediction - using ONS prevalence
a = data.frame(sample_date = seq(first_date, last_date+10, 1))
a$predictionba4 = 2^(predict(regba4,a))
a$predictionba5 = 2^(predict(regba5,a))
a$predictionba2121 = 2^(predict(regba2121,a))
may7 = 78000 #estimate from ONS incidence at similar point to current prevalence
ba2growth <- may7 * (1 + -0.022)^(seq(0:39))
b <- filter(a, sample_date >= as.Date("2022-05-07"))
b$ba2abs = ba2growth
b$ba2121abs = b$predictionba2121 * b$ba2121
a$predictionba2121 = 2^(predict(regba2121,a))
may7 = 78000 #estimate from ONS incidence at similar point to current prevalence
ba2growth <- may7 * (1 + -0.022)^(seq(0:39))
b <- filter(a, sample_date >= as.Date("2022-05-07"))
b$ba2abs = ba2growth
b$ba4abs = b$predictionba4 * b$ba2
b$ba5abs = b$predictionba5 * b$ba2
b$ba2121abs = b$predictionba2121 * b$ba2121
b$ba2121abs = b$predictionba2121 * b$ba2
b$total = b$ba2abs + b$ba4abs + b$ba5abs
b$total = b$ba2abs + b$ba4abs + b$ba5abs + b$ba2121abs
plot(b$sample_date, b$total)
library(lubridate)
library(tidyverse)
library(magrittr)
library(dplyr)
library(data.table)
first_date <- as.Date("2022-04-10")
last_date <- as.Date("2022-06-05")
#Get case data - this takes ages
all_data <- fread("https://cog-uk.s3.climb.ac.uk/phylogenetics/latest/cog_metadata.csv.gz")
our_data <- select(filter(all_data, sample_date >= first_date), lineage, sample_date)
#Keep all lineage names and select only the pure ones.
grp = group_by(our_data, sample_date, lineage) %>% summarise(number = n())
a = select(filter(grp, lineage == "BA.2"), sample_date, number)
b = select(filter(grp, lineage == "BA.4"), sample_date, number)
c = select(filter(grp, lineage == "BA.5"), sample_date, number)
d = select(filter(grp, lineage == "BA.2.12.1"), sample_date, number)
#Collect counts of each lineage in weighting by total of BA sequences
df <- purrr::reduce(list(a,b,c, d), dplyr::left_join, by = 'sample_date')
colnames(df) = c("sample_date", "ba2", "ba4", "ba5", "ba2121")
df <- mutate(df, ba4_frac = ba4 / ba2)
df <- mutate(df, ba5_frac = ba5 / ba2)
df <- mutate(df, ba2121_frac = ba2121 / ba2)
wts = coalesce(df$ba2,0) + coalesce(df$ba4,0) + coalesce(df$ba5,0)+ coalesce(df$ba2121,0)
#Regression with log2 transformation
regba4 <- lm(log2(ba4_frac) ~ date(sample_date), data = df, weights = wts)
regba5 <- lm(log2(ba5_frac) ~ date(sample_date), data = df, weights = wts)
regba2121 <- lm(log2(ba2121_frac) ~ date(sample_date), data = df, weights = wts)
plot(date(df$sample_date), log2(df$ba4_frac), col = 2, ylim = c(-13, 0), xlim = c(first_date, last_date), yaxt = "n", xaxt = "n", ylab = "Ratio of BA.4 to BA.2, % - log2 scale", xlab = "Date", main = "BA.4 & BA.5 as a ratio to BA.2 in COG-UK sequences")
points(date(df$sample_date), log2(df$ba5_frac), col = 3)
points(date(df$sample_date), log2(df$ba2121_frac), col = 4)
yticks = seq(-12, 0)
axis(side = 2, at = yticks, labels = c("0.024%","0.049%", "0.098%", "0.195%", "0.391%", "0.781%", "1.563%", "3.125%", "6.25%", "12.5%", "25%", "50%", "100%"))
xticks = seq(first_date, last_date, 7)
axis(1, at = xticks, labels = format(date(xticks), format = "%d %b"))
abline(regba4, col = 2)
abline(regba5, col = 3)
abline(regba2121, col = 4)
abline(h = 0, col = "gray", lty= "dotted")
abline(h = -1, col = "gray", lty= "dashed")
title(sub="Plot of COG-UK data, by @paulmainwood, inspired by previous work from @alexselby1770", adj=1, line=4, font=1, cex.sub = 0.6)
#Cases prediction - using ONS prevalence
a = data.frame(sample_date = seq(first_date, last_date+10, 1))
a$predictionba4 = 2^(predict(regba4,a))
a$predictionba5 = 2^(predict(regba5,a))
a$predictionba2121 = 2^(predict(regba2121,a))
may7 = 78000 #estimate from ONS incidence at similar point to current prevalence
ba2growth <- may7 * (1 + -0.022)^(seq(0:39))
b <- filter(a, sample_date >= as.Date("2022-05-07"))
b$ba2abs = ba2growth
b$ba4abs = b$predictionba4 * b$ba2
b$ba5abs = b$predictionba5 * b$ba2
b$ba2121abs = b$predictionba2121 * b$ba2
b$total = b$ba2abs + b$ba4abs + b$ba5abs + b$ba2121abs
plot(b$sample_date, b$total)
b
df
tail(df)
legend(10, 10, legend = c("BA.4", "BA.5", "BA.2.12.1"), col = c(2, 3, 4))
plot(date(df$sample_date), log2(df$ba4_frac), col = 2, ylim = c(-13, 0), xlim = c(first_date, last_date), yaxt = "n", xaxt = "n", ylab = "Ratio of BA.4 to BA.2, % - log2 scale", xlab = "Date", main = "BA.4 & BA.5 as a ratio to BA.2 in COG-UK sequences")
points(date(df$sample_date), log2(df$ba5_frac), col = 3)
points(date(df$sample_date), log2(df$ba2121_frac), col = 4)
yticks = seq(-12, 0)
axis(side = 2, at = yticks, labels = c("0.024%","0.049%", "0.098%", "0.195%", "0.391%", "0.781%", "1.563%", "3.125%", "6.25%", "12.5%", "25%", "50%", "100%"))
xticks = seq(first_date, last_date, 7)
axis(1, at = xticks, labels = format(date(xticks), format = "%d %b"))
abline(regba4, col = 2)
abline(regba5, col = 3)
abline(regba2121, col = 4)
abline(h = 0, col = "gray", lty= "dotted")
abline(h = -1, col = "gray", lty= "dashed")
legend(10, 10, legend = c("BA.4", "BA.5", "BA.2.12.1"), col = c(2, 3, 4))
legend(100, 100, legend = c("BA.4", "BA.5", "BA.2.12.1"), col = c(2, 3, 4))
title(sub="Plot of COG-UK data, by @paulmainwood, inspired by previous work from @alexselby1770", adj=1, line=4, font=1, cex.sub = 0.6)
legend(100, 100, legend = c("BA.4", "BA.5", "BA.2.12.1"), col = c("red", "green", "blue"))
legend("topleft", legend = c("BA.4", "BA.5", "BA.2.12.1"), col = c("red", "green", "blue"))
legend("topleft", inset = 0.2, legend = c("BA.4", "BA.5", "BA.2.12.1"), col = c("red", "green", "blue"))
legend("topleft", inset = 0.05, legend = c("BA.4", "BA.5", "BA.2.12.1"), col = c("red", "green", "blue"))
legend("bottomright", inset = 0.05, legend = c("BA.4", "BA.5", "BA.2.12.1"), col = c("red", "green", "blue"))
legend("bottomright", inset = 0.05, legend = c("BA.4", "BA.5", "BA.2.12.1"), col = c("red", "green", "blue"), type = "l")
legend("bottomright", inset = 0.05, legend = c("BA.4", "BA.5", "BA.2.12.1"), col = c("red", "green", "blue"), lty = c(1, 1))
plot(date(df$sample_date), log2(df$ba4_frac), col = 2, ylim = c(-13, 0), xlim = c(first_date, last_date), yaxt = "n", xaxt = "n", ylab = "Ratio of BA.4 to BA.2, % - log2 scale", xlab = "Date", main = "BA.4 & BA.5 as a ratio to BA.2 in COG-UK sequences")
points(date(df$sample_date), log2(df$ba5_frac), col = 3)
points(date(df$sample_date), log2(df$ba2121_frac), col = 4)
yticks = seq(-12, 0)
axis(side = 2, at = yticks, labels = c("0.024%","0.049%", "0.098%", "0.195%", "0.391%", "0.781%", "1.563%", "3.125%", "6.25%", "12.5%", "25%", "50%", "100%"))
xticks = seq(first_date, last_date, 7)
axis(1, at = xticks, labels = format(date(xticks), format = "%d %b"))
abline(regba4, col = 2)
abline(regba5, col = 3)
abline(regba2121, col = 4)
abline(h = 0, col = "gray", lty= "dotted")
abline(h = -1, col = "gray", lty= "dashed")
legend("bottomright", inset = 0.05, legend = c("BA.4", "BA.5", "BA.2.12.1"), col = c("red", "green", "blue"), lty = c(1, 1))
title(sub="Plot of COG-UK data, by @paulmainwood, inspired by previous work from @alexselby1770", adj=1, line=4, font=1, cex.sub = 0.6)
plot(date(df$sample_date), log2(df$ba4_frac), col = 2, ylim = c(-13, 0), xlim = c(first_date, last_date), yaxt = "n", xaxt = "n", ylab = "Ratio to BA.2, % - log2 scale", xlab = "Date", main = "BA.4,BA.5 & BA.2.12.1 as a ratio to BA.2 in COG-UK sequences")
points(date(df$sample_date), log2(df$ba5_frac), col = 3)
points(date(df$sample_date), log2(df$ba2121_frac), col = 4)
yticks = seq(-12, 0)
axis(side = 2, at = yticks, labels = c("0.024%","0.049%", "0.098%", "0.195%", "0.391%", "0.781%", "1.563%", "3.125%", "6.25%", "12.5%", "25%", "50%", "100%"))
xticks = seq(first_date, last_date, 7)
axis(1, at = xticks, labels = format(date(xticks), format = "%d %b"))
abline(regba4, col = 2)
abline(regba5, col = 3)
abline(regba2121, col = 4)
abline(h = 0, col = "gray", lty= "dotted")
abline(h = -1, col = "gray", lty= "dashed")
legend("bottomright", inset = 0.05, legend = c("BA.4", "BA.5", "BA.2.12.1"), col = c("red", "green", "blue"), lty = c(1, 1))
title(sub="Plot of COG-UK data, by @paulmainwood, inspired by previous work from @alexselby1770", adj=1, line=4, font=1, cex.sub = 0.6)
